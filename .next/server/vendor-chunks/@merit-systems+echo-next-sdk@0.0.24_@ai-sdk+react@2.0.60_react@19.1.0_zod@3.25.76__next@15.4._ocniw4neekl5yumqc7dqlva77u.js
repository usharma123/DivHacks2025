"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u";
exports.ids = ["vendor-chunks/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EchoContext: () => (/* binding */ EchoContext),
/* harmony export */   EchoProvider: () => (/* binding */ EchoProvider),
/* harmony export */   EchoSignIn: () => (/* binding */ EchoSignIn),
/* harmony export */   EchoSignOut: () => (/* binding */ EchoSignOut),
/* harmony export */   EchoTokens: () => (/* binding */ EchoTokens),
/* harmony export */   InsufficientFundsModal: () => (/* binding */ InsufficientFundsModal),
/* harmony export */   useEcho: () => (/* binding */ useEcho)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/.pnpm/next@15.4.7_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");

const EchoContext = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call EchoContext() from the server but EchoContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"EchoContext",
);const EchoProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call EchoProvider() from the server but EchoProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"EchoProvider",
);const EchoSignIn = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call EchoSignIn() from the server but EchoSignIn is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"EchoSignIn",
);const EchoSignOut = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call EchoSignOut() from the server but EchoSignOut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"EchoSignOut",
);const EchoTokens = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call EchoTokens() from the server but EchoTokens is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"EchoTokens",
);const InsufficientFundsModal = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call InsufficientFundsModal() from the server but InsufficientFundsModal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"InsufficientFundsModal",
);const useEcho = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useEcho() from the server but useEcho is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/utsavsharma/Documents/GitHub/DivHacks2025/node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js",
"useEcho",
);

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/index.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/index.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Echo)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/.pnpm/next@15.4.7_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.4.7_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @merit-systems/echo-typescript-sdk */ \"(rsc)/./node_modules/.pnpm/@merit-systems+echo-typescript-sdk@1.0.17_zod@3.25.76/node_modules/@merit-systems/echo-typescript-sdk/dist/index.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jwt-decode */ \"(rsc)/./node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js\");\n// src/index.ts\n\n\n// src/ai-providers/anthropic.ts\n\n// src/auth/token-manager.ts\n\n\n// src/config.ts\n\nfunction resolveEchoBaseUrl(config) {\n    return config.baseEchoUrl || _merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__.ECHO_BASE_URL;\n}\n// src/auth/cookie-names.ts\nvar ECHO_COOKIE = {\n    ACCESS_TOKEN: \"echo_access_token\",\n    REFRESH_TOKEN: \"echo_refresh_token\",\n    REFRESH_TOKEN_EXPIRES: \"echo_refresh_token_expires\",\n    USER_INFO: \"echo_user_info\",\n    CODE_VERIFIER: \"echo_code_verifier\"\n};\nfunction namespacedCookie(name, appId) {\n    return `${name}_${appId}`;\n}\n// src/auth/jwt-utils.ts\n\nfunction shouldRefreshToken(token) {\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_3__.jwtDecode)(token);\n        if (!decoded.exp) return true;\n        const now = Math.floor(Date.now() / 1e3);\n        const bufferTime = 30;\n        return decoded.exp <= now + bufferTime;\n    } catch  {\n        return true;\n    }\n}\n// src/auth/token-manager.ts\nasync function performTokenRefresh(refreshToken, config) {\n    return fetch(`${resolveEchoBaseUrl(config)}/api/oauth/token`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            grant_type: \"refresh_token\",\n            refresh_token: refreshToken,\n            client_id: config.appId\n        })\n    }).then(async (r)=>{\n        if (r.ok) {\n            const tokenData = await r.json();\n            return tokenData;\n        }\n        return Promise.reject(new Error(await r.text()));\n    });\n}\nasync function getEchoToken(config) {\n    const cookies3 = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    const accessToken = cookies3.get(namespacedCookie(ECHO_COOKIE.ACCESS_TOKEN, config.appId))?.value;\n    if (!accessToken || shouldRefreshToken(accessToken)) {\n        const refreshToken = cookies3.get(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN, config.appId))?.value;\n        if (!refreshToken) {\n            console.log(\"No refresh token found\");\n            return null;\n        }\n        try {\n            const refreshResult = await performTokenRefresh(refreshToken, config);\n            cookies3.set(namespacedCookie(ECHO_COOKIE.ACCESS_TOKEN, config.appId), refreshResult.access_token, {\n                httpOnly: true,\n                secure: \"development\" === \"production\",\n                sameSite: \"lax\",\n                maxAge: refreshResult.expires_in,\n                path: \"/\"\n            });\n            cookies3.set(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN, config.appId), refreshResult.refresh_token, {\n                httpOnly: true,\n                secure: \"development\" === \"production\",\n                sameSite: \"lax\",\n                maxAge: refreshResult.refresh_token_expires_in,\n                path: \"/\"\n            });\n            cookies3.set(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN_EXPIRES, config.appId), String(Math.floor(Date.now() / 1e3) + refreshResult.refresh_token_expires_in), {\n                httpOnly: true,\n                secure: \"development\" === \"production\",\n                sameSite: \"lax\",\n                maxAge: refreshResult.refresh_token_expires_in,\n                path: \"/\"\n            });\n            return refreshResult.access_token;\n        } catch (error) {\n            console.error(\"Token refresh failed:\", refreshToken, error);\n            return null;\n        }\n    }\n    return accessToken;\n}\n// src/ai-providers/anthropic.ts\nfunction createEchoAnthropic(config) {\n    return (0,_merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__.createEchoAnthropic)(config, async ()=>getEchoToken(config));\n}\n// src/ai-providers/google.ts\n\nfunction createEchoGoogle(config) {\n    return (0,_merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__.createEchoGoogle)(config, async ()=>getEchoToken(config));\n}\n// src/ai-providers/openai.ts\n\nfunction createEchoOpenAI(config) {\n    return (0,_merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__.createEchoOpenAI)(config, async ()=>getEchoToken(config));\n}\n// src/proxy/index.ts\n\nasync function handleEchoClientProxy(req, config) {\n    const proxyPath = req.nextUrl.pathname.replace(/^.*\\/proxy/, \"\");\n    const baseUrl = config.baseEchoUrl || \"https://echo.merit.systems\";\n    const targetUrl = `${baseUrl}${proxyPath}`;\n    const headers = new Headers(req.headers);\n    headers.delete(\"host\");\n    headers.delete(\"accept-encoding\");\n    headers.set(\"accept-encoding\", \"identity\");\n    headers.delete(\"if-none-match\");\n    headers.delete(\"if-modified-since\");\n    const accessToken = await getEchoToken(config);\n    if (!accessToken) {\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Authentication required\"\n        }, {\n            status: 401\n        });\n    }\n    headers.set(\"Authorization\", `Bearer ${accessToken}`);\n    try {\n        const response = await fetch(targetUrl, {\n            method: req.method,\n            headers,\n            ...req.method !== \"GET\" && req.method !== \"HEAD\" && {\n                body: req.body,\n                duplex: \"half\"\n            }\n        });\n        return response;\n    } catch (error) {\n        console.error(\"Proxy request failed:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Proxy request failed\"\n        }, {\n            status: 500\n        });\n    }\n}\n// src/auth/oauth-handlers.ts\n\n\nasync function generateCodeChallenge() {\n    const codeVerifier = Array.from(crypto.getRandomValues(new Uint8Array(32))).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n    const encoder = new TextEncoder();\n    const codeChallengeBuffer = await crypto.subtle.digest(\"SHA-256\", encoder.encode(codeVerifier));\n    const codeChallenge = btoa(String.fromCharCode(...new Uint8Array(codeChallengeBuffer))).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    return {\n        codeVerifier,\n        codeChallenge\n    };\n}\nasync function handleSignIn(req, config) {\n    const { origin } = req.nextUrl;\n    const basePath = config.basePath || \"/api/echo\";\n    const baseUrl = resolveEchoBaseUrl(config);\n    const redirectUrl = new URL(`${baseUrl}/api/oauth/authorize`);\n    redirectUrl.searchParams.set(\"client_id\", config.appId);\n    redirectUrl.searchParams.set(\"redirect_uri\", `${origin}${basePath}/callback`);\n    redirectUrl.searchParams.set(\"response_type\", \"code\");\n    const { codeVerifier, codeChallenge } = await generateCodeChallenge();\n    redirectUrl.searchParams.set(\"code_challenge\", codeChallenge);\n    redirectUrl.searchParams.set(\"code_challenge_method\", \"S256\");\n    const response = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(redirectUrl.toString());\n    response.cookies.set(namespacedCookie(ECHO_COOKIE.CODE_VERIFIER, config.appId), codeVerifier, {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        maxAge: 300,\n        // 5 minutes - same as auth code TTL\n        path: \"/\"\n    });\n    return response;\n}\nasync function handleSignOut(req, config) {\n    const { origin } = req.nextUrl;\n    const response = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(`${origin}`);\n    response.cookies.delete(namespacedCookie(ECHO_COOKIE.ACCESS_TOKEN, config.appId));\n    response.cookies.delete(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN, config.appId));\n    response.cookies.delete(namespacedCookie(ECHO_COOKIE.USER_INFO, config.appId));\n    response.cookies.delete(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN_EXPIRES, config.appId));\n    return response;\n}\nasync function handleCallback(req, config) {\n    const { origin } = req.nextUrl;\n    const basePath = config.basePath || \"/api/echo\";\n    const code = req.nextUrl.searchParams.get(\"code\");\n    const state = req.nextUrl.searchParams.get(\"state\");\n    if (!code || !state) {\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Invalid request\"\n        }, {\n            status: 400\n        });\n    }\n    const codeVerifier = req.cookies.get(namespacedCookie(ECHO_COOKIE.CODE_VERIFIER, config.appId))?.value;\n    if (!codeVerifier) {\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Code verifier not found. Please try signing in again.\"\n        }, {\n            status: 400\n        });\n    }\n    const tokenEndpoint = `${resolveEchoBaseUrl(config)}/api/oauth/token`;\n    const params = new URLSearchParams();\n    params.set(\"grant_type\", \"authorization_code\");\n    params.set(\"code\", code);\n    params.set(\"redirect_uri\", `${origin}${basePath}/callback`);\n    params.set(\"client_id\", config.appId);\n    params.set(\"code_verifier\", codeVerifier);\n    const tokenResponse = await fetch(tokenEndpoint, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"x-client-user-agent\": req.headers.get(\"user-agent\") || \"\",\n            \"x-client-ip\": req.headers.get(\"x-forwarded-for\")?.split(\",\")[0]?.trim() || \"\"\n        },\n        body: params.toString()\n    });\n    if (!tokenResponse.ok) {\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Token exchange failed\"\n        }, {\n            status: 500\n        });\n    }\n    const tokenData = await tokenResponse.json();\n    const response = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(`${origin}`);\n    response.cookies.set(namespacedCookie(ECHO_COOKIE.CODE_VERIFIER, config.appId), \"\", {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        maxAge: 0,\n        // Expire immediately\n        path: \"/\"\n    });\n    response.cookies.set(namespacedCookie(ECHO_COOKIE.ACCESS_TOKEN, config.appId), tokenData.access_token, {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        maxAge: tokenData.expires_in,\n        // expires_in is typically in seconds\n        path: \"/\"\n    });\n    response.cookies.set(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN, config.appId), tokenData.refresh_token, {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        maxAge: tokenData.refresh_token_expires_in,\n        path: \"/\"\n    });\n    response.cookies.set(namespacedCookie(ECHO_COOKIE.USER_INFO, config.appId), JSON.stringify(tokenData.user), {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        maxAge: tokenData.refresh_token_expires_in,\n        path: \"/\"\n    });\n    response.cookies.set(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN_EXPIRES, config.appId), String(Math.floor(Date.now() / 1e3) + tokenData.refresh_token_expires_in), {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        maxAge: tokenData.refresh_token_expires_in,\n        path: \"/\"\n    });\n    return response;\n}\nasync function handleRefresh(req, config) {\n    try {\n        const token = await getEchoToken(config);\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"No token found\"\n            }, {\n                status: 401\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Error refreshing token:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Error refreshing token\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleSession(req, config) {\n    const jar = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    const refreshExp = jar.get(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN_EXPIRES, config.appId))?.value;\n    const isAuthenticated = !!refreshExp && Number(refreshExp) > Math.floor(Date.now() / 1e3);\n    const userInfo = jar.get(namespacedCookie(ECHO_COOKIE.USER_INFO, config.appId))?.value;\n    const user = userInfo ? JSON.parse(userInfo) : null;\n    return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n        isAuthenticated,\n        user\n    });\n}\n// src/index.ts\nfunction Echo(config) {\n    const httpHandler = async (req)=>{\n        const { pathname } = req.nextUrl;\n        const basePath = config.basePath || \"/api/echo\";\n        const path = pathname.replace(basePath, \"\");\n        if (path.startsWith(\"/proxy\")) {\n            return handleEchoClientProxy(req, config);\n        }\n        switch(path){\n            // all the auth stuff\n            case \"/signin\":\n                return handleSignIn(req, config);\n            case \"/signout\":\n                return handleSignOut(req, config);\n            case \"/callback\":\n                return handleCallback(req, config);\n            case \"/refresh\":\n                return handleRefresh(req, config);\n            case \"/session\":\n                return handleSession(req, config);\n            default:\n                console.error(\"Unknown path\", path);\n                return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.error();\n        }\n    };\n    const getUser = async ()=>{\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const userInfo = cookieStore.get(namespacedCookie(ECHO_COOKIE.USER_INFO, config.appId))?.value;\n        if (!userInfo) {\n            return null;\n        }\n        const user = JSON.parse(userInfo);\n        return user;\n    };\n    const isSignedIn = async ()=>{\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const refreshTokenExpiry = cookieStore.get(namespacedCookie(ECHO_COOKIE.REFRESH_TOKEN_EXPIRES, config.appId))?.value;\n        if (!refreshTokenExpiry) {\n            return false;\n        }\n        const expiryTime = parseInt(refreshTokenExpiry);\n        const now = Math.floor(Date.now() / 1e3);\n        return expiryTime > now;\n    };\n    return {\n        // HTTP handlers for Next.js API routes\n        handlers: {\n            GET: httpHandler,\n            POST: httpHandler\n        },\n        // Authentication utilities (server-side only)\n        getUser,\n        isSignedIn,\n        getEchoToken: ()=>getEchoToken(config),\n        // AI provider clients\n        openai: createEchoOpenAI(config),\n        anthropic: createEchoAnthropic(config),\n        google: createEchoGoogle(config)\n    };\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EchoContext: () => (/* reexport safe */ _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.EchoContext),\n/* harmony export */   EchoProvider: () => (/* binding */ EchoProvider),\n/* harmony export */   EchoSignIn: () => (/* reexport safe */ _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.EchoSignIn),\n/* harmony export */   EchoSignOut: () => (/* reexport safe */ _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.EchoSignOut),\n/* harmony export */   EchoTokens: () => (/* reexport safe */ _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.EchoTokens),\n/* harmony export */   InsufficientFundsModal: () => (/* reexport safe */ _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.InsufficientFundsModal),\n/* harmony export */   useEcho: () => (/* reexport safe */ _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.useEcho)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.4.7_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @merit-systems/echo-react-sdk */ \"(ssr)/./node_modules/.pnpm/@merit-systems+echo-react-sdk@1.0.33_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__ai@5.0.47_fb3vp2od6lqf7mtywep5mxasji/node_modules/@merit-systems/echo-react-sdk/dist/index.js\");\n/* harmony import */ var _merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @merit-systems/echo-typescript-sdk */ \"(ssr)/./node_modules/.pnpm/@merit-systems+echo-typescript-sdk@1.0.17_zod@3.25.76/node_modules/@merit-systems/echo-typescript-sdk/dist/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! swr */ \"(ssr)/./node_modules/.pnpm/swr@2.3.6_react@19.1.0/node_modules/swr/dist/index/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@15.4.7_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ EchoContext,EchoProvider,EchoSignIn,EchoSignOut,EchoTokens,InsufficientFundsModal,useEcho auto */ // src/components/EchoProvider.tsx\n\n\n\n\n\nfunction useProxySession(basePath, initial) {\n    const { data: session, error, isLoading } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([\n        \"session\",\n        basePath\n    ], {\n        \"useProxySession.useSWR\": async ()=>{\n            const res = await fetch(`${basePath}/session`, {\n                credentials: \"include\"\n            });\n            if (!res.ok) throw new Error(`Session ${res.status}`);\n            return res.json();\n        }\n    }[\"useProxySession.useSWR\"], {\n        fallbackData: initial,\n        revalidateOnFocus: true,\n        revalidateOnReconnect: true,\n        errorRetryCount: 2\n    });\n    return {\n        isAuthenticated: session?.isAuthenticated ?? false,\n        isLoading,\n        error: error?.message ?? null\n    };\n}\nfunction EchoProvider({ config, children }) {\n    const basePath = config.basePath || \"/api/echo\";\n    const session = useProxySession(basePath, config.initialSession);\n    const echoClient = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"EchoProvider.useMemo[echoClient]\": ()=>session.isAuthenticated ? new _merit_systems_echo_typescript_sdk__WEBPACK_IMPORTED_MODULE_2__.EchoClient({\n                baseUrl: `${basePath}/proxy`,\n                apiKey: \"next-sdk-proxy\"\n            }) : null\n    }[\"EchoProvider.useMemo[echoClient]\"], [\n        basePath,\n        session.isAuthenticated\n    ]);\n    const signIn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"EchoProvider.useCallback[signIn]\": async ()=>{\n            const returnTo =  false ? 0 : void 0;\n            const url = `${basePath}/signin${returnTo ? `?returnTo=${encodeURIComponent(returnTo)}` : \"\"}`;\n            window.location.href = url;\n        }\n    }[\"EchoProvider.useCallback[signIn]\"], [\n        basePath\n    ]);\n    const signOut = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"EchoProvider.useCallback[signOut]\": async ()=>{\n            window.location.href = `${basePath}/signout`;\n        }\n    }[\"EchoProvider.useCallback[signOut]\"], [\n        basePath\n    ]);\n    const getToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"EchoProvider.useCallback[getToken]\": async ()=>null\n    }[\"EchoProvider.useCallback[getToken]\"], []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_merit_systems_echo_react_sdk__WEBPACK_IMPORTED_MODULE_1__.EchoProviderRaw, {\n        config: {\n            appId: config.appId\n        },\n        rawUser: null,\n        isLoggedIn: session.isAuthenticated,\n        isAuthLoading: session.isLoading,\n        authError: session.error ? new Error(session.error) : null,\n        echoClient,\n        signIn,\n        signOut,\n        getToken,\n        children\n    });\n}\n// src/client.ts\n\n\n //# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1lcml0LXN5c3RlbXMrZWNoby1uZXh0LXNka0AwLjAuMjRfQGFpLXNkaytyZWFjdEAyLjAuNjBfcmVhY3RAMTkuMS4wX3pvZEAzLjI1Ljc2X19uZXh0QDE1LjQuX29jbml3NG5lZWtsNXl1bXFjN2RxbHZhNzd1L25vZGVfbW9kdWxlcy9AbWVyaXQtc3lzdGVtcy9lY2hvLW5leHQtc2RrL2Rpc3QvY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFZ0Q7QUFFaEI7QUFDTDtBQUNSO0FBMEVmO0FBbEVKLFNBQVMsZ0JBQ1AsVUFDQSxTQUNBO0lBQ0EsTUFBTSxFQUNKLE1BQU0sU0FDTixPQUNBLFdBQ0YsR0FBSSwrQ0FBTSxDQUNSO1FBQUM7UUFBVyxRQUFRO0tBQUE7a0NBQ3BCO1lBQ0UsTUFBTSxNQUFNLE1BQU0sTUFBTSxHQUFHLFFBQVEsWUFBWTtnQkFDN0MsYUFBYTtZQUNmLENBQUM7WUFDRCxJQUFJLENBQUMsSUFBSSxHQUFJLE9BQU0sSUFBSSxNQUFNLFdBQVcsSUFBSSxNQUFNLEVBQUU7WUFDcEQsT0FBTyxJQUFJLEtBQUs7UUFDbEI7aUNBQ0E7UUFDRSxjQUFjO1FBQ2QsbUJBQW1CO1FBQ25CLHVCQUF1QjtRQUN2QixpQkFBaUI7SUFDbkI7SUFHRixPQUFPO1FBQ0wsaUJBQWlCLFNBQVMsbUJBQW1CO1FBQzdDO1FBQ0EsT0FBTyxPQUFPLFdBQVc7SUFDM0I7QUFDRjtBQU9PLFNBQVMsYUFBYSxFQUFFLFFBQVEsU0FBUyxHQUFzQjtJQUNwRSxNQUFNLFdBQVcsT0FBTyxZQUFZO0lBQ3BDLE1BQU0sVUFBVSxnQkFBZ0IsVUFBVSxPQUFPLGNBQWM7SUFFL0QsTUFBTSxhQUFhLDhDQUFPOzRDQUN4QixJQUNFLFFBQVEsa0JBQ0osSUFBSSwwRUFBVSxDQUFDO2dCQUNiLFNBQVMsR0FBRyxRQUFRO2dCQUNwQixRQUFRO1lBQ1YsQ0FBQyxJQUNEOzJDQUNOO1FBQUM7UUFBVSxRQUFRLGVBQWU7S0FBQTtJQUdwQyxNQUFNLFNBQVMsa0RBQVc7NENBQUM7WUFDekIsTUFBTSxXQUNKLE1BQWtCLEdBQWMsQ0FBZ0IsR0FBTztZQUN6RCxNQUFNLE1BQU0sR0FBRyxRQUFRLFVBQVUsV0FBVyxhQUFhLG1CQUFtQixRQUFRLENBQUMsS0FBSyxFQUFFO1lBQzVGLE9BQU8sU0FBUyxPQUFPO1FBQ3pCOzJDQUFHO1FBQUMsUUFBUTtLQUFDO0lBRWIsTUFBTSxVQUFVLGtEQUFXOzZDQUFDO1lBQzFCLE9BQU8sU0FBUyxPQUFPLEdBQUcsUUFBUTtRQUNwQzs0Q0FBRztRQUFDLFFBQVE7S0FBQztJQUViLE1BQU0sV0FBVyxrREFBVzs4Q0FBQyxVQUFZOzZDQUFNLENBQUMsQ0FBQztJQUVqRCxPQUNFLHVFQUFDLDBFQUFlLEVBQWY7UUFDQyxRQUFRO1lBQUUsT0FBTyxPQUFPO1FBQU07UUFDOUIsU0FBUztRQUNULFlBQVksUUFBUTtRQUNwQixlQUFlLFFBQVE7UUFDdkIsV0FBVyxRQUFRLFFBQVEsSUFBSSxNQUFNLFFBQVEsS0FBSyxJQUFJO1FBQ3REO1FBQ0E7UUFDQTtRQUNBO1FBRUM7SUFBQTtBQUdQOztBQ3RGTztBQUU4QiIsInNvdXJjZXMiOlsiL1VzZXJzL3V0c2F2c2hhcm1hL0RvY3VtZW50cy9HaXRIdWIvc3JjL2NvbXBvbmVudHMvRWNob1Byb3ZpZGVyLnRzeCIsIi9Vc2Vycy91dHNhdnNoYXJtYS9Eb2N1bWVudHMvR2l0SHViL3NyYy9jbGllbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyBSZWFjdE5vZGUsIHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBFY2hvVXNlciB9IGZyb20gJ0BtZXJpdC1zeXN0ZW1zL2VjaG8tcmVhY3Qtc2RrJztcbmltcG9ydCB7IEVjaG9Qcm92aWRlclJhdyB9IGZyb20gJ0BtZXJpdC1zeXN0ZW1zL2VjaG8tcmVhY3Qtc2RrJztcbmltcG9ydCB7IEVjaG9DbGllbnQgfSBmcm9tICdAbWVyaXQtc3lzdGVtcy9lY2hvLXR5cGVzY3JpcHQtc2RrJztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuZXhwb3J0IGludGVyZmFjZSBFY2hvUHJveHlDb25maWcge1xuICBhcHBJZDogc3RyaW5nO1xuICBiYXNlUGF0aD86IHN0cmluZzsgLy8gZGVmYXVsdCAnL2FwaS9lY2hvJ1xuICBpbml0aWFsU2Vzc2lvbj86IHsgaXNBdXRoZW50aWNhdGVkOiBib29sZWFuOyB1c2VyPzogRWNob1VzZXIgfCBudWxsIH07XG59XG5cbmZ1bmN0aW9uIHVzZVByb3h5U2Vzc2lvbihcbiAgYmFzZVBhdGg6IHN0cmluZyxcbiAgaW5pdGlhbD86IEVjaG9Qcm94eUNvbmZpZ1snaW5pdGlhbFNlc3Npb24nXVxuKSB7XG4gIGNvbnN0IHtcbiAgICBkYXRhOiBzZXNzaW9uLFxuICAgIGVycm9yLFxuICAgIGlzTG9hZGluZyxcbiAgfSA9IHVzZVNXUihcbiAgICBbJ3Nlc3Npb24nLCBiYXNlUGF0aF0sXG4gICAgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7YmFzZVBhdGh9L3Nlc3Npb25gLCB7XG4gICAgICAgIGNyZWRlbnRpYWxzOiAnaW5jbHVkZScsXG4gICAgICB9KTtcbiAgICAgIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoYFNlc3Npb24gJHtyZXMuc3RhdHVzfWApO1xuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgfSxcbiAgICB7XG4gICAgICBmYWxsYmFja0RhdGE6IGluaXRpYWwsXG4gICAgICByZXZhbGlkYXRlT25Gb2N1czogdHJ1ZSxcbiAgICAgIHJldmFsaWRhdGVPblJlY29ubmVjdDogdHJ1ZSxcbiAgICAgIGVycm9yUmV0cnlDb3VudDogMixcbiAgICB9XG4gICk7XG5cbiAgcmV0dXJuIHtcbiAgICBpc0F1dGhlbnRpY2F0ZWQ6IHNlc3Npb24/LmlzQXV0aGVudGljYXRlZCA/PyBmYWxzZSxcbiAgICBpc0xvYWRpbmcsXG4gICAgZXJyb3I6IGVycm9yPy5tZXNzYWdlID8/IG51bGwsXG4gIH07XG59XG5cbmludGVyZmFjZSBFY2hvUHJvdmlkZXJQcm9wcyB7XG4gIGNvbmZpZzogRWNob1Byb3h5Q29uZmlnO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRWNob1Byb3ZpZGVyKHsgY29uZmlnLCBjaGlsZHJlbiB9OiBFY2hvUHJvdmlkZXJQcm9wcykge1xuICBjb25zdCBiYXNlUGF0aCA9IGNvbmZpZy5iYXNlUGF0aCB8fCAnL2FwaS9lY2hvJztcbiAgY29uc3Qgc2Vzc2lvbiA9IHVzZVByb3h5U2Vzc2lvbihiYXNlUGF0aCwgY29uZmlnLmluaXRpYWxTZXNzaW9uKTtcblxuICBjb25zdCBlY2hvQ2xpZW50ID0gdXNlTWVtbyhcbiAgICAoKSA9PlxuICAgICAgc2Vzc2lvbi5pc0F1dGhlbnRpY2F0ZWRcbiAgICAgICAgPyBuZXcgRWNob0NsaWVudCh7XG4gICAgICAgICAgICBiYXNlVXJsOiBgJHtiYXNlUGF0aH0vcHJveHlgLFxuICAgICAgICAgICAgYXBpS2V5OiAnbmV4dC1zZGstcHJveHknLFxuICAgICAgICAgIH0pXG4gICAgICAgIDogbnVsbCxcbiAgICBbYmFzZVBhdGgsIHNlc3Npb24uaXNBdXRoZW50aWNhdGVkXVxuICApO1xuXG4gIGNvbnN0IHNpZ25JbiA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXR1cm5UbyA9XG4gICAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdy5sb2NhdGlvbi5ocmVmIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHVybCA9IGAke2Jhc2VQYXRofS9zaWduaW4ke3JldHVyblRvID8gYD9yZXR1cm5Ubz0ke2VuY29kZVVSSUNvbXBvbmVudChyZXR1cm5Ubyl9YCA6ICcnfWA7XG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB1cmw7XG4gIH0sIFtiYXNlUGF0aF0pO1xuXG4gIGNvbnN0IHNpZ25PdXQgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBgJHtiYXNlUGF0aH0vc2lnbm91dGA7XG4gIH0sIFtiYXNlUGF0aF0pO1xuXG4gIGNvbnN0IGdldFRva2VuID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4gbnVsbCwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPEVjaG9Qcm92aWRlclJhd1xuICAgICAgY29uZmlnPXt7IGFwcElkOiBjb25maWcuYXBwSWQgfSBhcyBhbnl9XG4gICAgICByYXdVc2VyPXtudWxsfVxuICAgICAgaXNMb2dnZWRJbj17c2Vzc2lvbi5pc0F1dGhlbnRpY2F0ZWR9XG4gICAgICBpc0F1dGhMb2FkaW5nPXtzZXNzaW9uLmlzTG9hZGluZ31cbiAgICAgIGF1dGhFcnJvcj17c2Vzc2lvbi5lcnJvciA/IG5ldyBFcnJvcihzZXNzaW9uLmVycm9yKSA6IG51bGx9XG4gICAgICBlY2hvQ2xpZW50PXtlY2hvQ2xpZW50fVxuICAgICAgc2lnbkluPXtzaWduSW59XG4gICAgICBzaWduT3V0PXtzaWduT3V0fVxuICAgICAgZ2V0VG9rZW49e2dldFRva2VufVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0VjaG9Qcm92aWRlclJhdz5cbiAgKTtcbn1cbiIsIid1c2UgY2xpZW50JztcblxuZXhwb3J0IHsgRWNob1Byb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL0VjaG9Qcm92aWRlcic7XG5leHBvcnQge1xuICBFY2hvU2lnbkluLFxuICBFY2hvU2lnbk91dCxcbiAgRWNob1Rva2VucyxcbiAgSW5zdWZmaWNpZW50RnVuZHNNb2RhbCxcbn0gZnJvbSAnQG1lcml0LXN5c3RlbXMvZWNoby1yZWFjdC1zZGsnO1xuXG5leHBvcnQgeyB1c2VFY2hvLCBFY2hvQ29udGV4dCB9IGZyb20gJ0BtZXJpdC1zeXN0ZW1zL2VjaG8tcmVhY3Qtc2RrJztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@merit-systems+echo-next-sdk@0.0.24_@ai-sdk+react@2.0.60_react@19.1.0_zod@3.25.76__next@15.4._ocniw4neekl5yumqc7dqlva77u/node_modules/@merit-systems/echo-next-sdk/dist/client.js\n");

/***/ })

};
;